note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class YAML_NODE_PAIR_S_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	key: INTEGER
			-- Access member `key`
		require
			exists: exists
		do
			Result := c_key (item)
		ensure
			result_correct: Result = c_key (item)
		end

	set_key (a_value: INTEGER) 
			-- Change the value of member `key` to `a_value`.
		require
			exists: exists
		do
			set_c_key (item, a_value)
		ensure
			key_set: a_value = key
		end

	value: INTEGER
			-- Access member `value`
		require
			exists: exists
		do
			Result := c_value (item)
		ensure
			result_correct: Result = c_value (item)
		end

	set_value (a_value: INTEGER) 
			-- Change the value of member `value` to `a_value`.
		require
			exists: exists
		do
			set_c_value (item, a_value)
		ensure
			value_set: a_value = value
		end

feature {NONE} -- Implementation wrapper for struct struct yaml_node_pair_s

	sizeof_external: INTEGER 
		external
			"C inline use <yaml.h>"
		alias
			"sizeof(struct yaml_node_pair_s)"
		end

	c_key (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <yaml.h>"
		alias
			"[
				((struct yaml_node_pair_s*)$an_item)->key
			]"
		end

	set_c_key (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <yaml.h>"
		alias
			"[
				((struct yaml_node_pair_s*)$an_item)->key =  (int)$a_value
			]"
		ensure
			key_set: a_value = c_key (an_item)
		end

	c_value (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <yaml.h>"
		alias
			"[
				((struct yaml_node_pair_s*)$an_item)->value
			]"
		end

	set_c_value (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <yaml.h>"
		alias
			"[
				((struct yaml_node_pair_s*)$an_item)->value =  (int)$a_value
			]"
		ensure
			value_set: a_value = c_value (an_item)
		end

end
